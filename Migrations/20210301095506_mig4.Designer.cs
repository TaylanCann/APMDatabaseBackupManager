// <auto-generated />
using System;
using ApmDbBackupManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApmDbBackupManager.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210301095506_mig4")]
    partial class mig4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ApmDbBackupManager.Models.BackupSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackupName")
                        .HasColumnType("TEXT");

                    b.Property<int>("BackupScheme")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysAdd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysAddTerm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DbName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DiffTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DriveUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FtpLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("FtpPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("FtpUserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDiffBackup")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDrive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFtp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("MonthAdd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonthAddTerm")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DriveUserId");

                    b.ToTable("BackupSchedules");
                });

            modelBuilder.Entity("ApmDbBackupManager.Models.DriveUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("User")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DriveUsers");
                });

            modelBuilder.Entity("ApmDbBackupManager.Models.BackupSchedule", b =>
                {
                    b.HasOne("ApmDbBackupManager.Models.DriveUser", "DriveUser")
                        .WithMany("BackupSchedules")
                        .HasForeignKey("DriveUserId");

                    b.Navigation("DriveUser");
                });

            modelBuilder.Entity("ApmDbBackupManager.Models.DriveUser", b =>
                {
                    b.Navigation("BackupSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
